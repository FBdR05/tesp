import numpy as np
import math

p = np.array ([3.78,
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 3.78,                 
							 0.04503849566542164,  
							 0.044298636360626156, 
							 0.04397434748989659,  
							 0.043614556125241385, 
							 0.04337557431956873,  
							 0.04298148273947744,  
							 0.0417968963117164,   
							 0.04140549776319938,  
							 0.04135531234359157,  
							 0.041238155270065774, 
							 0.039175748756330515, 
							 0.038722896760563605, 
							 0.03750070324661167, 
							 0.035909163841601366, 
							 0.0325498342572613,   
							 0.027253521228667376]) 

q = np.array([21.051080261180033,
5.23431332264,
5.41232981251,
3.94107748485,
4.61933606259,
3.95764546946,
5.04592857708,
6.3578895111,
3.58996519407,
7.30116421525,
7.28941108059,
6.77602869683,
5.81404808403,
9.86901489729,
3.914686252,
3.28052992506,
3.1326831751,
11.0765939255,
6.37269298879,
5.04577052714,
4.39655247976,
6.16993209313,
4.51863654096,
2.88662417668,
6.87019966975,
4.14960041166,
4.09348817575,
4.03033028575,
3.96354938523,
3.38090636096,
5.66899095731
])
idx = np.argwhere (p == p[0])[-1][0]
unresp = np.cumsum(q[:idx+1])[-1]

n = p.size - idx - 1

if n < 1:
	a = 0
	b = 0
	qmax = 0
else:
	qresp = np.cumsum(q[idx+1:])
	presp = p[idx+1:]
	qmax = qresp[-1]
	if n == 1:
		a = 0
		b = presp[-1]
	else:
		resp_fit = np.polyfit (qresp, presp, 1)
		a = resp_fit[0]
		b = resp_fit[1]


bid = [p[0], unresp, a, b, qmax]
print(bid)

